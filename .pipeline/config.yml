# Project configuration
general:
  buildTool: "mta"

# Stages configuration
stages:
  Build:
    npmExecuteLint: true # true, if you want to run a lint check that verifies the syntax of your JavaScript code (default: false)

  Additional Unit Tests:
    karmaExecuteTests: false # true, if you want to execute the Karma Test Runner (default: false)
    npmExecuteScripts: false # true, if you want to execute test scripts that are defined in step npmExecuteScripts (default: false)

  Malware Scan:
    malwareExecuteScan: true # true, if you want your pipeline to execute malware scanning (default: false)

  Acceptance:
    cloudFoundryDeploy: false # true, if you want to deploy to Cloud Foundry test space (default: false)
    cfApiEndpoint: "https://api.cf.us10.hana.ondemand.com" # for example, https://api.cf.eu10.hana.ondemand.com
    cfOrg: "Hatch Ltd - PayAsYouGO_test-ashok-39iscc3f"
    cfSpace: "dev" # enter the Cloud Foundry space, in which you want to execute uiVeri5 tests
    cfCredentialsId: "deploy-to-cf"
    uiVeri5ExecuteTests: false # true, if you want to execute uiVeri5 tests (default:false)

  Release:
    cloudFoundryDeploy: true # true, if you want to deploy to Cloud Foundry. If you set this parameter to true, the CloudFoundryDeploy step is mandatory
    cfApiEndpoint: "https://api.cf.us10.hana.ondemand.com" # for example, https://api.cf.eu10.hana.ondemand.com
    cfOrg: "Hatch Ltd - PayAsYouGO_test-ashok-39iscc3f"
    cfSpace: "dev"
    cfCredentialsId: "deploy-to-cf"
    tmsUpload: false # true if you want to upload your artifact to SAP Cloud Transport Management. If you set this parameter to true, the tmsUpload step is mandatory

# Steps configuration
steps:
  # Init stage step
  artifactPrepareVersion:
    versioningType: "cloud_noTag" # or "cloud", if you want your pipeline to write Git tags. In this case, you need to add the gitHttpsCredentialsId parameter

  npmExecuteLint:
    failOnError: false # true, if you want your pipeline to fail, if the lint check reveals any errors

  # Test stage step
  npmExecuteScripts: # only relevant, if you set the npmExecuteScripts parameter in the Additional Unit Tests stage to true
    runScripts:
      - "test" # list of script names in your package.json file to be executed

  # Acceptance stage steps
  uiVeri5ExecuteTests:
    credentialsId: "<ID OF YOUR CREDENTIAL TO AUTHENTICATE AGAINST THE TEST APPLICATION>" # avoid using a technical user credential and create a special test user instead
    runOptions: # please read the note below
      - "--config.connectionConfigs.direct.binaries.chromedriver.localPath" # do not change the path to the chrome driver
      - "/usr/bin/chromedriver"
      - "--baseUrl"
      - "<base-url-overwrite>" # enter the URL from the Application Routes section of your application from your SAP, BTP subaccount
      - "./path/to/uiveri5/conf.js"

  # Release stage steps
  cloudFoundryDeploy: # only relevant, if you set the cloudFoundryDeploy parameter in the Release stage to true
    mtaDeployParameters: "-f --version-rule ALL"

  tmsUpload: # only relevant, if you set the tmsUpload parameter in the Release stage to true
    nodeName: "<NAME OF THE NODE FOR THE UPLOAD TO SAP CLOUD TRANSPORT MANAGEMENT>"
    credentialsId: "<ID OF YOUR CREDENTIAL TO AUTHENTICATE AGAINST SAP CLOUD TRANSPORT MANAGEMENT>"
